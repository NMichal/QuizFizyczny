<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>